* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

table,
th,
tr {
  border-spacing: 0;
  border-collapse: collapse;

}

@font-face {
  font-family: Roboto;
  src: url("../../assets/fonts/Roboto/Roboto-Bold.ttf");
}

@mixin flex($d, $jc, $ai) {
  display: flex;
  flex-direction: $d;
  justify-content: $jc;
  align-items: $ai;
}

.main {
  font-family: Roboto;
  width: 100%;

  .container {
    @include flex(row, space-around, flex-start);
    width: 1180px;
    margin: 0 auto;
    padding: 1em;

    @media screen and (max-width: 1200px) {
      width: 1000px;
    }

    @media screen and (max-width: 958px) {
      @include flex(column, space-between, center);
      width: 700px;
    }

    @media screen and (max-width: 730px) {
      width: 100%;
    }


    #addUserForm {
      width: 30%;

      @media screen and (max-width: 958px) {
        width: 100%;
      }

      .wrap {
        width: 100%;

        @media screen and (max-width: 958px) {
          gap: 10px;
        }

        &+.form-input {
          @media screen and (max-width: 958px) {
            display: flex;
            justify-content: flex-end;
          }
        }
      }

      .form-input {
        margin: 0 0 1rem 0;

        h3 {
          font-size: 22px;
          margin: 0 0 0.55rem 0;
          color: rgba(0, 0, 0, 0.8);
        }

        input:is([type="text"], [type="email"], [type="password"]) {
          outline: 0;
          border: 1px solid skyblue;
          border-radius: 10px;
          padding: 0.75em 1.25em;
          width: 100%;

          &:focus {
            border: 3px solid skyblue;
          }
        }

        .alert-message {
          margin: 5px 0 0.5rem 0;
          font-size: 14px;
          color: red;
        }
      }
    }

    .table-wrap {
      width: 60%;
      height: 100%;

      @media screen and (max-width: 958px) {
        width: 100%;
      }

      @media screen and (max-width: 720px) {
        overflow-x: auto;
      }

      table.users {

        width: 100%;
        height: 100%;
        text-align: center;

        @media screen and (max-width: 958px) {
          width: 100%;
        }

        @media screen and (max-width: 730px) {
          width: 720px;
        }

        th {
          font-weight: bold;
          padding: 10px;
          border-block: 1px solid grey;
        }

        tbody {
          tr {
            &:nth-child(odd) {
              background-color: rgba($color: #36ff36, $alpha: 0.35)
            }

            td {
              padding: 10px;

              &:nth-child(5),
              &:last-child {
                width: max-content;
                padding: 10px;
                ;
              }
            }

          }
        }
      }
    }
  }

}

input {
  font-family: Roboto;

  &[type="button"],
  &[type="submit"],
  &[type="reset"] {
    border: 0;
    outline: 0;
    padding: 0.5rem 1rem;
    border-width: 2px;
    border-style: outset;
    border-radius: 10px;
    color: black;

    &:disabled {
      opacity: 0.2;
    }

    &.delete {
      background-color: tomato;
      border-color: tomato;

      &:focus {
        border: 2px inset tomato;
      }
    }

    &.edit {
      background-color: gold;
      border-color: gold;

      &:focus {
        border: 2px inset gold;
      }
    }

    &#addUser {
      background-color: #36ff36;
      border-color: #36ff36;

      &:focus {
        border: 2px inset #36ff36;
      }
    }

    &#saveChanges {
      background-color: #10ccba;
      border-color: #10ccba;

      &:focus {
        border: 2px inset #10ccba;
      }
    }
  }
}

.ng-dirty.ng-invalid.ng-touched {
  border-color: red !important;
}

.ng-pristine.ng-valid,
.ng-valid {
  border-color: green !important;
}

.align-self-end {
  @media screen and (max-width: 970px) {
    align-self: flex-end;
  }
}