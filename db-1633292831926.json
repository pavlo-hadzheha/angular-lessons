{
  "blogs": [
    {
      "title": "New Post 2 with some changes",
      "content": "Here we are talking about somethin else..\n\n!!!!!!!!!!!!!!!!!!!!!!!!!",
      "date": 1633048459089,
      "postedBy": "admin",
      "id": 2,
      "editedBy": "admin"
    },
    {
      "title": "New Post 3 (edited)",
      "content": "Here we are talking about somethin else.. And the author is not admin",
      "date": 1633048863388,
      "postedBy": "Pavlo",
      "id": 3,
      "editedBy": "Pavlo"
    },
    {
      "title": "Dependency Injection (DI) in Angular",
      "content": "DI is wired into the Angular framework and used everywhere to provide new components with the services or other things they need. Components consume services; that is, you can inject a service into a component, giving the component access to that service class.\n\nTo define a class as a service in Angular, use the @Injectable() decorator to provide the metadata that allows Angular to inject it into a component as a dependency. Similarly, use the @Injectable() decorator to indicate that a component or other class (such as another service, a pipe, or an NgModule) has a dependency.",
      "date": 1633052291374,
      "postedBy": "Ivan",
      "id": 4,
      "editedBy": "admin"
    }
  ],
  "users": [
    {
      "id": 1,
      "username": "admin",
      "email": "admin@gmail.com",
      "password": "pain is inevitable",
      "isAdmin": true
    },
    {
      "username": "Pavlo",
      "email": "i.w.gadzhega@gmail.com",
      "password": "qwert12345",
      "isAdmin": false,
      "id": 2
    },
    {
      "username": "Pavlo",
      "email": "i.w.gadzhega@gmail.com",
      "password": "qwert12345",
      "isAdmin": false,
      "id": 3
    },
    {
      "username": "Ivan",
      "email": "ivan2000@gmail.com",
      "password": "ivan15",
      "isAdmin": false,
      "id": 4
    },
    {
      "username": "Ivan",
      "email": "ivan2000@gmail.com",
      "password": "ivan2000",
      "isAdmin": false,
      "id": 5
    }
  ]
}